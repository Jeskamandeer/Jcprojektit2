package LavaKirja;
// Generated by ComTest BEGIN
import kanta.SailoException;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import LavaKirja.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2017.07.31 13:54:57 // Generated by ComTest
 *
 */
public class LavaKirjaTest {


  // Generated by ComTest BEGIN  // LavaKirja: 15
   private LavaKirja lavakirja; 
   private Paiva paiva1; 
   private Paiva paiva2; 
   private Esiintyja esi11; 
   private Esiintyja esi12; 
   private Esiintyja esi13; 
   private Esiintyja esi14; 
   private Esiintyja esi15; 

   @SuppressWarnings("javadoc")
   public void alustaLavaKirja() throws SailoException{
     lavakirja = new LavaKirja(); 
     paiva1 = new Paiva(); paiva1.vastaaPaivan(); paiva1.rekisteroi(); 
     paiva2 = new Paiva(); paiva2.vastaaPaivan(); paiva2.rekisteroi(); 
     lavakirja.lisaa(paiva1); 
     lavakirja.lisaa(paiva2); 
     esi11 = new Esiintyja(); esi11.vastaaEsiintyja("Metallica"); esi11.rekisteroi(); 
     esi12 = new Esiintyja(); esi12.vastaaEsiintyja("Metallica"); esi12.rekisteroi(); 
     esi13 = new Esiintyja(); esi13.vastaaEsiintyja("Metallica"); esi13.rekisteroi(); 
     esi14 = new Esiintyja(); esi14.vastaaEsiintyja("Metallica"); esi14.rekisteroi(); 
     esi15 = new Esiintyja(); esi15.vastaaEsiintyja("Metallica"); esi15.rekisteroi(); 
     try {
     lavakirja.lisaa(paiva1, esi11); 
     lavakirja.lisaa(paiva2, esi12); 
     lavakirja.lisaa(paiva1, esi13); 
     lavakirja.lisaa(paiva2, esi14); 
     lavakirja.lisaa(paiva1, esi15); 
     } catch ( Exception e) {
        System.err.println(e.getMessage()); 
     }
   }
  // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista60 
   * @throws Exception when error
   */
  @Test
  public void testPoista60() throws Exception {    // LavaKirja: 60
    alustaLavaKirja(); 
    assertEquals("From: LavaKirja line: 63", 0, lavakirja.annaEsiintyjat(1).size()); 
    assertEquals("From: LavaKirja line: 64", 1, lavakirja.poista(paiva1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoistaEsiintyja77 
   * @throws Exception when error
   */
  @Test
  public void testPoistaEsiintyja77() throws Exception {    // LavaKirja: 77
    alustaLavaKirja(); 
    assertEquals("From: LavaKirja line: 80", 5, lavakirja.getEsiintyjia()); 
    lavakirja.poistaEsiintyja(esi12); 
    assertEquals("From: LavaKirja line: 82", 4, lavakirja.getEsiintyjia()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLisaa113 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa113() throws SailoException {    // LavaKirja: 113
    alustaLavaKirja(); 
    assertEquals("From: LavaKirja line: 117", 2, lavakirja.getPaivia()); 
    lavakirja.lisaa(paiva1); 
    assertEquals("From: LavaKirja line: 119", 3, lavakirja.getPaivia()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testEtsi153 
   * @throws CloneNotSupportedException when error
   * @throws SailoException when error
   */
  @Test
  public void testEtsi153() throws CloneNotSupportedException, SailoException {    // LavaKirja: 153
    alustaLavaKirja(); 
    Paiva paiva3 = new Paiva(); paiva3.rekisteroi(); 
    paiva3.aseta(1,"11.3.1996"); 
    lavakirja.lisaa(paiva3); 
    Collection<Paiva> loytyneet = lavakirja.etsi("*11*",1); 
    assertEquals("From: LavaKirja line: 161", 1, loytyneet.size()); 
    Iterator<Paiva> it = loytyneet.iterator(); 
    assertEquals("From: LavaKirja line: 163", true, it.next() == paiva3); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testHae183 
   * @throws SailoException when error
   */
  @Test
  public void testHae183() throws SailoException {    // LavaKirja: 183
    alustaLavaKirja(); 
    Paiva paiva3 = new Paiva(); 
    paiva3.rekisteroi(); 
    lavakirja.lisaa(paiva3); 
    List<Integer> loytyneet; 
    loytyneet = lavakirja.hae(paiva3.getTunnusNro()); 
    assertEquals("From: LavaKirja line: 194", 0, loytyneet.size()); 
    loytyneet = lavakirja.hae(paiva1.getTunnusNro()); 
    assertEquals("From: LavaKirja line: 196", 3, loytyneet.size()); 
    loytyneet = lavakirja.hae(paiva2.getTunnusNro()); 
    assertEquals("From: LavaKirja line: 198", 2, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa226 
   * @throws SailoException when error
   */
  @Test
  public void testKorvaaTaiLisaa226() throws SailoException {    // LavaKirja: 226
    alustaLavaKirja(); 
    assertEquals("From: LavaKirja line: 230", 2, lavakirja.getPaivia()); 
    lavakirja.korvaaTaiLisaa(paiva1); 
    assertEquals("From: LavaKirja line: 232", 2, lavakirja.getPaivia()); 
  } // Generated by ComTest END
}