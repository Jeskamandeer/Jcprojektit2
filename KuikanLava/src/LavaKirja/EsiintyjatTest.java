package LavaKirja;
// Generated by ComTest BEGIN
import java.io.File;
import java.util.List;
import java.util.Iterator;
import static org.junit.Assert.*;
import org.junit.*;
import LavaKirja.*;
// Generated by ComTest END
import kanta.SailoException;

/**
 * Test class made by ComTest
 * @version 2017.07.31 14:06:19 // Generated by ComTest
 *
 */
public class EsiintyjatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta48 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta48() throws SailoException {    // Esiintyjat: 48
    Esiintyjat esiintyjat = new Esiintyjat(); 
    Esiintyja esi11  = new Esiintyja(); esi11.vastaaEsiintyja("Metallica"); 
    Esiintyja esi12  = new Esiintyja(); esi12.vastaaEsiintyja("KoiraBänd"); 
    Esiintyja esi13  = new Esiintyja(); esi13.vastaaEsiintyja("KissaBönd"); 
    Esiintyja esi14  = new Esiintyja(); esi14.vastaaEsiintyja("koira"); 
    Esiintyja esi15  = new Esiintyja(); esi15.vastaaEsiintyja("2"); 
    String tiedNimi = "testiKirja"; 
    File ftied = new File(tiedNimi+".dat"); 
    ftied.delete(); 
    try {
    esiintyjat.lueTiedostosta(tiedNimi); 
    fail("Esiintyjat: 62 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    esiintyjat.lisaa(esi11); 
    esiintyjat.lisaa(esi12); 
    esiintyjat.lisaa(esi13); 
    esiintyjat.lisaa(esi14); 
    esiintyjat.lisaa(esi15); 
    esiintyjat.tallenna(); 
    esiintyjat = new Esiintyjat(); 
    esiintyjat.lueTiedostosta(tiedNimi); 
    Iterator<Esiintyja> i = esiintyjat.iterator(); 
    assertEquals("From: Esiintyjat line: 72", esi11.toString(), i.next().toString()); 
    assertEquals("From: Esiintyjat line: 73", esi12.toString(), i.next().toString()); 
    assertEquals("From: Esiintyjat line: 74", esi13.toString(), i.next().toString()); 
    assertEquals("From: Esiintyjat line: 75", esi14.toString(), i.next().toString()); 
    assertEquals("From: Esiintyjat line: 76", esi15.toString(), i.next().toString()); 
    assertEquals("From: Esiintyjat line: 77", false, i.hasNext()); 
    esiintyjat.lisaa(esi13); 
    esiintyjat.tallenna(); 
    assertEquals("From: Esiintyjat line: 80", true, ftied.delete()); 
    File fbak = new File(tiedNimi+".bak"); 
    assertEquals("From: Esiintyjat line: 82", true, fbak.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista193 
   * @throws SailoException when error
   */
  @Test
  public void testPoista193() throws SailoException {    // Esiintyjat: 193
    Esiintyjat esiintyjat = new Esiintyjat(); 
    Esiintyja esi11  = new Esiintyja(); esi11.vastaaEsiintyja("Metallica"); 
    Esiintyja esi12  = new Esiintyja(); esi12.vastaaEsiintyja("KoiraBänd"); 
    Esiintyja esi13  = new Esiintyja(); esi13.vastaaEsiintyja("KissaBönd"); 
    Esiintyja esi14  = new Esiintyja(); esi14.vastaaEsiintyja("koira"); 
    Esiintyja esi15  = new Esiintyja(); esi15.vastaaEsiintyja("2"); 
    esiintyjat.lisaa(esi11); 
    esiintyjat.lisaa(esi12); 
    esiintyjat.lisaa(esi13); 
    esiintyjat.lisaa(esi14); 
    assertEquals("From: Esiintyjat line: 207", false, esiintyjat.poista(esi15)); assertEquals("From: Esiintyjat line: 207", 4, esiintyjat.getLkm()); 
    assertEquals("From: Esiintyjat line: 208", true, esiintyjat.poista(esi14)); assertEquals("From: Esiintyjat line: 208", 3, esiintyjat.getLkm()); 
    List<Esiintyja> h = esiintyjat.annaEsiintyjat(1); 
    assertEquals("From: Esiintyjat line: 210", 1, h.size()); 
    assertEquals("From: Esiintyjat line: 211", esi11, h.get(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaPaivanEsiintyjat232 */
  @Test
  public void testPoistaPaivanEsiintyjat232() {    // Esiintyjat: 232
    Esiintyjat esiintyjat = new Esiintyjat(); 
    Esiintyja esi11  = new Esiintyja(); esi11.vastaaEsiintyja("Metallica"); esi11.rekisteroi(); 
    Esiintyja esi12  = new Esiintyja(); esi12.vastaaEsiintyja("KoiraBänd"); esi12.rekisteroi(); 
    Esiintyja esi13  = new Esiintyja(); esi13.vastaaEsiintyja("KissaBönd"); esi13.rekisteroi(); 
    Esiintyja esi14  = new Esiintyja(); esi14.vastaaEsiintyja("koira"); esi14.rekisteroi(); 
    Esiintyja esi15  = new Esiintyja(); esi15.vastaaEsiintyja("2"); esi15.rekisteroi(); 
    esiintyjat.lisaa(esi11); 
    esiintyjat.lisaa(esi12); 
    esiintyjat.lisaa(esi13); 
    esiintyjat.lisaa(esi14); 
    esiintyjat.lisaa(esi14); 
    assertEquals("From: Esiintyjat line: 245", 0, esiintyjat.poistaPaivanEsiintyjat(2)); assertEquals("From: Esiintyjat line: 245", 5, esiintyjat.getLkm()); 
    assertEquals("From: Esiintyjat line: 246", 0, esiintyjat.poistaPaivanEsiintyjat(3)); assertEquals("From: Esiintyjat line: 246", 5, esiintyjat.getLkm()); 
  } // Generated by ComTest END
}